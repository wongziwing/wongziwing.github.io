<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://wongziwing.github.io/</id>
    <title>Gridea</title>
    <updated>2019-11-07T14:30:33.671Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://wongziwing.github.io/"/>
    <link rel="self" href="https://wongziwing.github.io//atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://wongziwing.github.io//images/avatar.png</logo>
    <icon>https://wongziwing.github.io//favicon.ico</icon>
    <rights>All rights reserved 2019, Gridea</rights>
    <entry>
        <title type="html"><![CDATA[huffmanTree]]></title>
        <id>https://wongziwing.github.io//post/huffmantree</id>
        <link href="https://wongziwing.github.io//post/huffmantree">
        </link>
        <updated>2019-11-07T14:12:34.000Z</updated>
        <content type="html"><![CDATA[<p>前几天上课讲了huffmanTree树的实现原理<br>
现在有空就用代码简单实现一遍<br>
首先解释一遍基本思想<br>
1 将所有节点存入一个数组/链表中,从中找出两个最小值,并且组成一个新节点<br>
2 将上述中的两个最小值删除,将新节点加入数组/链表中<br>
3 重复1-2步骤,直到数组/链表剩下1个节点</p>
<p style="font-size:12px">下面代码模仿网上实现,效率并不高</p>
<pre style="font-size:12px">
<pre><code>public static Node create(Node[] nodeArray){

    int num = 0;
    int len = nodeArray.length;

    /*
        此处运用简单的冒泡排序
     */

    while(num &lt; len - 1){
        for (int i = num; i &lt; len; i++){
            int min = i;
            for (int j = i+1; j &lt; len; j++){
                if (nodeArray[min].value &gt; nodeArray[j].value){
                    min = j;
                }
            }
            swap(nodeArray, i, min);
        }
        int newNodeValule = nodeArray[num].value + nodeArray[num+1].value;
        Node newNode = new Node(&quot;分支&quot;, newNodeValule, nodeArray[num], nodeArray[num + 1]);
        nodeArray[++num] = newNode;
    }
    return nodeArray[num];

}
</code></pre>
</pre>
<hr/>
<h6>有空待补</h6>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[linux控制台艺术字]]></title>
        <id>https://wongziwing.github.io//post/linux控制台艺术字</id>
        <link href="https://wongziwing.github.io//post/linux控制台艺术字">
        </link>
        <updated>2019-10-31T14:29:06.000Z</updated>
        <content type="html"><![CDATA[<h5>sudo apt-get install figlet</h5>
安装 figlet
<br/>
命令: figlet gg
<br/>
效果:
<pre>
  __ _  __ _ 
 / _` |/ _` |
| (_| | (_| |
 \__, |\__, |
 |___/ |___/ 
 </pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://wongziwing.github.io//post/hello-gridea</id>
        <link href="https://wongziwing.github.io//post/hello-gridea">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>